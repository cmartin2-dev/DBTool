<Application x:Class="DBTool.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:DBTool"
             xmlns:commons="clr-namespace:DBTool.Commons"
             StartupUri="MainWindow.xaml">

    <Application.Resources>

        
        <Style TargetType="TextBox">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>
        <Style TargetType="TextBox" x:Key="TextboxValidation">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="15"/>
            <Style.Triggers>
                <Trigger Property="Text" Value="">
                    <Setter Property="Background" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="RadioButton">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6">
                            <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Left"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Hover -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <!-- Checked -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="Green"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Border"  x:Key="blackBorders">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="5"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Margin" Value="15"/>
        </Style>
        <Style TargetType="Border"  x:Key="grayBorders">
            <Setter Property="BorderBrush" Value="Silver"/>
            <Setter Property="BorderThickness" Value="5"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Margin" Value="15"/>
        </Style>
        <Style TargetType="Label"  x:Key="headerLabel">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="ExtraBlack"/>
            <Setter Property="Foreground" Value="Black"/>
        </Style>
        <Style TargetType="Label"  x:Key="commonLabel">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="Black"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="Black"/>
        </Style>

        <Style x:Key="RoundButton" TargetType="Button">
            <Setter Property="Width" Value="100"/>
            <!--<Setter Property="Height" Value="45"/>-->
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                                <Setter Property="Foreground" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="DarkGray"/>
                                <Setter Property="Foreground" Value="Red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#33FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListViewItem">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="Foreground" Value="DarkBlue"/>
            <!--<Setter Property="FontSize" Value="15"/>-->
            <Setter Property="Background" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            

        </Style>

        <Style TargetType="GridViewColumnHeader">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="FontSize" Value="15"/>
            <!-- header + vertical lines -->
        </Style>

        <Style TargetType="Label" x:Key="labelButton">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="ExtraBlack"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6">
                            <ContentPresenter VerticalAlignment="Center"
                                  HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Hover -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Green"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="Gray"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Global DataGrid style -->
        <Style TargetType="DataGrid">
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="LightGray"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="Background" Value="White"/>
        </Style>

        <!-- Global DataGridRow style -->
        <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridRow">
                        <Border x:Name="RowBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="LightGray"
                                BorderThickness="0,0,0,1"
                                SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>

                                <DataGridCellsPresenter Grid.Column="0" />
                                <!--<DataGridDetailsPresenter Grid.Row="1" Grid.Column="0"/>-->
                            </SelectiveScrollingGrid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!-- Mouse over effect -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="RowBorder" Property="Background" Value="#E6F2FF"/>
                            </Trigger>

                            <!-- Selected row effect -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="RowBorder" Property="Background" Value="#CCE5FF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Global DataGridColumnHeader style -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#F9F9F9"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>

        <Style TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="DarkBlue"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border x:Name="CellBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <!-- MouseOver highlight (optional, light blue) -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CellBorder" Property="Background" Value="Transparent"/>
                            </Trigger>

                            <!-- Selected cell (let row handle it, stay transparent) -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="CellBorder" Property="Background" Value="Transparent"/>
                                <Setter TargetName="CellBorder" Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="Foreground" Value="DarkBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TabItem" x:Key="BaseTabItem">
            <!--<Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border 
                            x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="10,10,0,0"
                            Padding="5,2,5,2"
                            Margin="2">
                            <ContentPresenter 
                                x:Name="Content"
                                ContentSource="Header"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="LightBlue"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="SteelBlue"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Bd" Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>



        <Style TargetType="TabItem" x:Key="ClosableTabItem"  BasedOn="{StaticResource BaseTabItem}" >
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <!-- Tab text -->
                            <TextBlock Text="{Binding}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0"/>

                            <!-- Close button -->
                            <Button Content="❌"
                                    Width="15" Height="15"
                                    VerticalAlignment="Top"
                                    Padding="0"
                                    Margin="0,0,0,0"
                                    Background="Transparent"
                                    Foreground="Gray"
                                    BorderThickness="0"
                                    Cursor="Hand"
                                    ToolTip="Close Tab"
                                    Click="Close_Click"/>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="MenuItem">
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <ContextMenu x:Key="SharedListViewContextMenu">
            <MenuItem Header="Copy Value" Click="MenuItem_Click"/>
        </ContextMenu>
        <Style TargetType="ListView">
            <Setter Property="ContextMenu" Value="{StaticResource SharedListViewContextMenu}"/>
            <EventSetter Event="ContextMenuOpening" Handler="ListView_ContextMenuOpening"/>
            <EventSetter Event="PreviewMouseRightButtonDown" Handler="ListView_PreviewMouseRightButtonDown"/>
        </Style>
    </Application.Resources>
</Application>
